{"version":3,"sources":["webpack:///./src/pages/slides.js"],"names":["SlideDeckList","decks","data","allSitePage","edges","sort","a","b","node","context","frontmatter","date","deckList","map","i","key","className","to","path","title","query"],"mappings":"2FAAA,kFA4BeA,UAzBO,SAAC,GAAc,IACLC,EADI,EAAXC,KACfC,YAAeC,MAIvBH,EAAMI,MAHS,SAACC,EAAGC,GAAJ,OACbD,EAAEE,KAAKC,QAAQC,YAAYC,KAAOL,EAAEE,KAAKC,QAAQC,YAAYC,QAI/D,IAAMC,EAAWX,EAAMY,KAAI,WAAWC,GAAX,IAAGN,EAAH,EAAGA,KAAH,OACzB,wBAAIO,IAAKD,EAAGE,UAAU,6BACpB,kBAAC,OAAD,CAAMC,GAAIT,EAAKU,MAAOV,EAAKC,QAAQC,YAAYS,OAC/C,8BAAOX,EAAKC,QAAQC,YAAYC,UAIpC,OACE,yBAAKK,UAAU,qBACb,2CACA,6BACA,4BACGJ,KAQF,IAAMQ,EAAK","file":"component---src-pages-slides-js-82d009767f56bc4821b7.js","sourcesContent":["import React from 'react';\nimport { graphql, Link } from 'gatsby';\n\nconst SlideDeckList = ({ data }) => {\n  const { allSitePage: { edges: decks }} = data;\n  const sorter = (a, b) => (\n    a.node.context.frontmatter.date > a.node.context.frontmatter.date\n  );\n  decks.sort(sorter);\n\n  const deckList = decks.map(({ node }, i) => (\n    <li key={i} className='flex justify-between pb-2'>\n      <Link to={node.path}>{node.context.frontmatter.title}</Link>\n      <span>{node.context.frontmatter.date}</span>\n    </li>\n  ));\n\n  return (\n    <div className='w-full h-full p-8'>\n      <h1>Slide Decks</h1>\n      <br/>\n      <ul>\n        {deckList}   \n      </ul>\n    </div>\n  )\n}\n\nexport default SlideDeckList\n\nexport const query = graphql`\n  query SlideDeckQuery {\n    allSitePage(filter: {path: {glob: \"/slides/*\"}}) {\n      edges {\n        node {\n          path\n          context {\n            frontmatter {\n              date\n              desc\n              title\n            }\n          }\n        }\n      }\n    }\n  }\n`;"],"sourceRoot":""}